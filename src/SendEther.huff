 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

/*
    `Call` opcode will be used here to transfer ether to an address

    Call opcode stack takes 7 inputs:
        1. gas
        2. address
        3. value
        4. argOffset
        5. argSize
        6. retOffset
        7. retSize
    Since, we are only trnasferring the ether only the first 3 stack inputs are of significance for us.
    Rest we can input as 0x00
*/

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(sendEther) eq sendEther jumpi
    0x00 0x00 revert

    sendEther:
        0x00 0x00 0x00 0x00                 // [0x00, 0x00, 0x00, 0x00]
        callvalue 0x04 calldataload gas     // [gas, address, msg.value, 0x00, 0x00, 0x00, 0x00]
        call                                // []

 }