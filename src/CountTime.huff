
/** 
 *  COUNT_TIME HUFF EXERCISE
 *
 *  The task is to write within the `MAIN` macro below, functions named `getTimeElapsed` and `getTimeUntil`. 
 *  `getTimeElapsed` receives the uint256 parameter and counts how much time elapsed since the provided timestamp, it should return 0 if the provided timestamp is in the future
 *
 *  `getTimeUntil` receives uint256 parameter and counts how much time remains until the provided timestamp, it should return 0 if the provided timestamp is in the past
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function getTimeElapsed(uint256) payable returns(uint256)
#define function getTimeUntil(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    dup1 __FUNC_SIG(getTimeElapsed) eq getTimeElapsed jumpi
    __FUNC_SIG(getTimeUntil) eq getTimeUntil jumpi
    0x00 0x00 revert

    getTimeElapsed:
        0x04 calldataload
        dup1
        timestamp
        lt handle_revert jumpi
        timestamp
        sub
        0x00 mstore
        0x20 0x00 return
    getTimeUntil:
        0x04 calldataload
        dup1
        timestamp
        gt handle_revert jumpi
        timestamp
        swap1
        sub
        0x00 mstore
        0x20 0x00 return
    handle_revert:
        0x00 0x00 mstore
        0x20 0x00 return
}